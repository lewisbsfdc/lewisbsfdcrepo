<apex:page showHeader="true" sidebar="true" controller="GoogleAddressController">

<html>
<head>
  <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
  <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>


    <body onload="onloadFunction()">
    <title>Place Autocomplete Address Form</title>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no"/>
    <meta charset="utf-8"/>

    <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 100%;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
    </style>
    <link type="text/css" rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"/>
    <style>
      #locationField, #controls {
        position: relative;
        width: 480px;
      }
      #autocomplete {
        position: absolute;
        top: 0px;
        left: 0px;
        width: 99%;
      }
      .label {
        text-align: right;
        font-weight: bold;
        width: 100px;
        color: #303030;
        font-family: "Roboto";
      }
      #address {
        border: 1px solid #000090;
        background-color: #f0f9ff;
        width: 480px;
        padding-right: 2px;
      }
      #address td {
        font-size: 10pt;
      }
      .field {
        width: 99%;
      }
      .slimField {
        width: 80px;
      }
      .wideField {
        width: 200px;
      }
      #locationField {
        height: 20px;
        margin-bottom: 2px;
      }
    </style>
</body>
  </head>
  <div id="locationField">
      <input id="autocomplete"
             placeholder="Enter your address"
             onFocus="geolocate()"
             type="text"/>
    </div>

    <!-- Note: The address components in this sample are typical. You might need to adjust them for
               the locations relevant to your app. For more information, see
         https://developers.google.com/maps/documentation/javascript/examples/places-autocomplete-addressform
    -->

    <table id="address">
      <tr>
        <td class="label">Street address</td>
        <td class="slimField"><input class="field" id="street_number" disabled="true" value="{!streetNumber}"/></td>
        <td class="wideField" colspan="2"><input class="field" id="route" disabled="true"/></td>
      </tr>
      <tr>
        <td class="label">City</td>
        <td class="wideField" colspan="3"><input class="field" id="locality" disabled="true"/></td>
      </tr>
      <tr>
        <td class="label">State</td>
        <td class="slimField"><input class="field" id="administrative_area_level_1" disabled="true"/></td>
        <td class="label">Zip code</td>
        <td class="wideField"><input class="field" id="postal_code" disabled="true"/></td>
      </tr>
      <tr>
        <td class="label">Country</td>
        <td class="wideField" colspan="3"><input class="field" id="country" disabled="true"/></td>
      </tr>
    </table>

<div >  
        <input id="apiKey1" value="{!apiKey1}" type="hidden"   /> 
</div>

<!-- type="hidden" -->

<script type="text/javascript">

 $( function() {
    console.log('get Script');
    //var apiKey;


        // GoogleAddressController.getAPIKey(
        //     function (response, event) {
        //         console.log(response);
        //         apiKey = response;
        //         var scriptTag = document.createElement("script");
        //         scriptTag.src = "https://maps.googleapis.com/maps/api/js?key=" + apiKey + "&signed_in=true&libraries=places&callback=initAutocomplete";
        //         document.head.appendChild(scriptTag);

        //     }
        // );
        // }, function() {
        //     console.log('There was an error.');

    //apiKey = document.getElementById('apiKey1').value;
    //console.log('apiKey1', document.getElementById('apiKey1').value);

    // var scriptTag = document.createElement("script");

    // console.log('apiKey', apiKey);

    // // scriptTag.src = "https://maps.googleapis.com/maps/api/js?key=" + "AIzaSyBJpqM1gX8A3tzRBb13op5ci9tiZOJZWeY" + "&signed_in=true&libraries=places&callback=initAutocomplete";
    // scriptTag.src = "https://maps.googleapis.com/maps/api/js?key=" + apiKey + "&signed_in=true&libraries=places&callback=initAutocomplete";
    // document.head.appendChild(scriptTag);
    // navigator.geolocation.getCurrentPosition(function(e) {
    //     console.log(e.coords.latitude + ', ' + e.coords.longitude);
    //    //component.set("v.latitude",e.coords.latitude);
    //    //component.set("v.longitude",e.coords.longitude);
    //     Searchclass.createSearchLIst(
    //         e.coords.latitude,
    //         e.coords.longitude,
    //         function (response, event) {
    //             console.log(response);
    //         }
    //     );
    //     }, function() {
    //         console.log('There was an error.');
    },
    function onloadFunction(){
        console.log('onloadFunction');
    },





    );


    // function myFunction() {
    //     console.log('myFunction');
    //     var scriptTag = document.createElement("script");
    //     scriptTag.src = "https://maps.googleapis.com/maps/api/js?key=AIzaSyBJpqM1gX8A3tzRBb13op5ci9tiZOJZWeY&signed_in=true&libraries=places&callback=initAutocomplete";
    //     document.head.appendChild(scriptTag);
    // }
</script>
<script type="text/javascript">
     function load() {
        console.log("load event detected!");
        var apiKey;


        GoogleAddressController.getAPIKey(
            function (response, event) {
                console.log(response);
                apiKey = response;
                var scriptTag = document.createElement("script");
                scriptTag.src = "https://maps.googleapis.com/maps/api/js?key=" + apiKey + "&signed_in=true&libraries=places&callback=initAutocomplete";
                document.head.appendChild(scriptTag);

            }
        );

      }
      window.onload = load;
</script>
<script>
// This sample uses the Autocomplete widget to help the user select a
// place, then it retrieves the address components associated with that
// place, and then it populates the form fields with those details.
// This sample requires the Places library. Include the libraries=places
// parameter when you first load the API. For example:
// <script
// src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

var placeSearch, autocomplete;
var myMap ;

var componentForm = {
  street_number: 'short_name',
  route: 'long_name',
  locality: 'long_name',
  administrative_area_level_1: 'short_name',
  country: 'long_name',
  postal_code: 'short_name'
};

function initAutocomplete() {
  // Create the autocomplete object, restricting the search predictions to
  // geographical location types.
  autocomplete = new google.maps.places.Autocomplete(
      document.getElementById('autocomplete'), {types: ['geocode']});

  // Avoid paying for data that you don't need by restricting the set of
  // place fields that are returned to just the address components.
  autocomplete.setFields(['address_component']);

  // When the user selects an address from the drop-down, populate the
  // address fields in the form.
  autocomplete.addListener('place_changed', fillInAddress);
}

function fillInAddress() {
  // Get the place details from the autocomplete object.
  var place = autocomplete.getPlace();
  //myMap = new Map();
  console.log('myMap Before', myMap);


  for (var component in componentForm) {
    document.getElementById(component).value = '';
    document.getElementById(component).disabled = false;
  }
  myMap = new Map();
  // { "name":"John", "age":30, "city":"New York"}

  // Get each component of the address from the place details,
  // and then fill-in the corresponding field on the form.
  for (var i = 0; i < place.address_components.length; i++) {
    var addressType = place.address_components[i].types[0];
    if (componentForm[addressType]) {

      var val = place.address_components[i][componentForm[addressType]];

      
      //myMap = myMap + addressType + '|' + val + '|';
      myMap.set(addressType, val);
      console.log('val', val);
      document.getElementById(addressType).value = val;
    }    
  }
  console.log('componentForm', componentForm);
  console.log('myMap', myMap);

var myJson = {};
myJson = mapToObj(myMap);
var json = JSON.stringify(myJson);
console.log('json', json);
  //console.log('stringify', JSON.stringify(myMap) );

//var myJson = {};
//myJson.myMap = myMap;
//myJson.myString = myString;
//var json = JSON.stringify(myMap);

//console.log('json' , json);
  //assignVariable(json);
 // document.getElementById('hdnField').value = 'From fillInAddress';
}




// Bias the autocomplete object to the user's geographical location,
// as supplied by the browser's 'navigator.geolocation' object.
function geolocate() {
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      var geolocation = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
      };
      var circle = new google.maps.Circle(
          {center: geolocation, radius: position.coords.accuracy});
      autocomplete.setBounds(circle.getBounds());
    });
  }
}

function mapToObj(map){
  const obj = {}
  for (let [k,v] of map)
    obj[k] = v
  return obj
}

function clickMe() {
            methodOneInJavascript('INVOKED!');
        }

    </script> 

<!-- <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBJpqM1gX8A3tzRBb13op5ci9tiZOJZWeY&signed_in=true&libraries=places&callback=initAutocomplete"></script> -->
</html>
	
</apex:page>